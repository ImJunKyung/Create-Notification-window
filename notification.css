@charset "UTF-8";

#dialog {
    /* 최상단 */
    top: 0;
    /* 좌측에 붙이기 */
    left: 0;
    /* 가로폭 전체 */
    width: 100%;
    /* 세로폭 전체 */
    height: 100%;
    /* 배경을 흐리게 처리 */
    backdrop-filter: blur(0.25rem);
    /* 배경색 지정 (a0은 투명도) */
    background-color: #17202aa0;
    /* 요소를 완전히 투명하게 */
    opacity: 0;
    /* 마우스 이벤트를 요소에 전달하지 않음 */
    pointer-events: none;
    /* 요소의 위치 지정 */
    position: fixed;
    /* 전환 시간 지정 */
    transition-duration: 250ms;
    /* 전환 효과를 사용할 속성 지정 */
    transition-property: opacity;
    /* 전환 효과의 타이밍 함수 */
    transition-timing-function: ease;
    /* 요소를 최상단으로 배치 */
    z-index: 999;
}

/* id가 dialog인 요소에 visible클래스가 추가된 경우 */
#dialog.visible {
    /* 투명도를 1로 설정 */
    opacity: 1;
    /* 마우스 이벤트 모두 활성화 */
    pointer-events: all;
}

/* dialog요소의 자식 클래스 중 modal클래스를 선택 */
#dialog > .modal {
    /* 요소의 상단 위치를 세로 중앙에서 + 1rem(16px) */
    top: calc(50% + 1rem);
    /* 요소를 가로 중앙으로 배치 */
    left: 50%;
    /* 요소의 최대 크기를 뷰포트 너비에서 - 2rem */
    max-width: calc(100vw - 2rem);
    /* 요소의 테두리를 둥글게 */
    border-radius: 0.375rem;
    /* 요소에 그림자 효과 추가 (가로/세로/퍼짐정도/굵기/색상,투명도 */
    box-shadow: 0 0 1rem 0.0625rem #17202a50;
    /* 내용이 요소의 경계를 넘으면 숨김 */
    overflow: hidden;
    /* 요소의 위치를 문서 상에서 절대적으로 설정 */
    position: absolute;
    /* 가로 세로 위치가 요소가 커진 만큼에서 -50%씩 이동한다 (가운데 정렬을 위함) */
    transform: translate(-50%, -50%);
    /* 전환 시간 지정 */
    transition-duration: 250ms;
    /* 전환 효과를 사용할 속성 지정 */
    transition-property: top;
    /* 전환 효과의 타이밍 함수 */
    transition-timing-function: ease;

    /* 요소를 flex컨테이너로 지정, 내부 요소들을 flex레이아웃으로 지정 */
    display: flex;
    /* 요소의 자식 요소들을 주 축 방향의 수직 축으로 늘리기 (여기서는 가로로 늘림) */
    align-items: stretch;
    /* flex컨테이너의 주축을 수직 방향으로 설정 */
    flex-direction: column;
    /* 주축 방향에 따라 요소들을 시작 부분에 정렬 */
    justify-content: flex-start;
}

/* dialog에 visible 클래스가 추가되면 자식 클래스 modal의 값 변경 */
#dialog.visible > .modal {
    /* 상단으로 50% 올림 */
    top: 50%;
}

/* title클래스에 대한 스타일 지정 */
#dialog > .modal > .title {
    /* .title의 배경색 */
    background-color: #17202a;
    /* .title의 폰트 색 */
    color: #ffffff;
    /* .title의 마우스 커서 모양 옵션 */
    cursor: default;
    /* .title의 폰트 크기 */
    font-size: 1.125rem;
    /* 요소의 안쪽 여백 설정 (상하/좌우) */
    padding: 0.875rem 1.25rem;
}

/* modal클래스의 자식인 .button-container에 대한 스타일 지정 */
#dialog > .modal > .button-container {
    /* 배경색 지정 */
    background-color: #ffffff;
    /* 요소의 상단에 실선 지정 */
    border-top: 0.0625rem solid #d5d8dc;

    /* 요소를 flex컨테이너로 지정, 내부 요소들을 flex레이아웃으로 지정 */
    display: flex;
    /* 요소의 자식 요소들을 주 축 방향의 수직 축으로 늘리기 (여기서는 세로로 늘림) */
    align-items: stretch;
    /* flex컨테이너의 주축을 가로 방향으로 설정 */
    flex-direction: row;
    /* 주축 방향에 따라 요소들을 시작 부분에 정렬 */
    justify-content: flex-start;
}

/* button-container클래스의 자식인 .button에 대한 스타일 지정 */
#dialog > .modal > .button-container > .button {
    /* 커서 모양을 선택 가능한 손 모양으로 */
    cursor: pointer;
    /* flex-grow: 1; flex-shrink: 1; flex-basis: 0%; */
    /* 첫 번째 값 1: 아이템의 확장 가능한 공간(flex-grow)을 지정한다 이 경우에는 1로 설정하여 남은 여백을 아이템이 모두 동일하게 확장할 수 있도록 한다. */
    /* 두 번째 값 1: 아이템의 축소 가능한 공간(flex-shrink)을 지정한다. 이 경우에는 1로 설정하여 아이템들이 너비를 줄일 수 있도록 한다. */
    /* 세 번째 값 0: 아이템의 초기 크기(flex-basis)를 지정한다. 이 경우에는 0으로 설정하여 초기 크기를 0으로 만들어 유연하게 조절할 수 있도록 한다. */
    flex: 1 1 0;
    /* 요소의 내부 여백 지정 */
    padding: 0.75rem 1.25rem;
    /* .button 내의 텍스트 정렬을 가운데로 한다 */
    text-align: center;
    /* 사용자가 텍스트를 선택(드래그)하지 못하도록 한다 */
    user-select: none;
    /* nowrap는 텍스트가 요소를 넘어갈 경우 줄바꿈을 하지 않고 한 줄로 유지하도록 한다 */
    white-space: nowrap;
}

/* button-container클래스의 자식인 .button에 클릭 처리가 되었을 경우의 스타일 */
#dialog > .modal > .button-container > .button:active {
    background-color: #eaecee;
}

/* button-container클래스의 자식인 .button 영역에 마우스가 올라갔을 경우의 스타일 */
#dialog > .modal > .button-container > .button:hover {
    color: #3498db;
}

/* button-container클래스의 자식인 두 번째 .button에 왼쪽 실선 추가 */
#dialog > .modal > .button-container > .button + .button {
    border-left: 0.0625rem solid #d5d8dc;
}